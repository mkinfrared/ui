@import "../../styles/common.scss";

.TextArea {
  --background: var(--black-light);
  --border-color: var(--grey-light);
  --color: var(--white);

  :where(&) {
    @include theme("light") {
      --background: var(--white);
      --border-color: var(--grey-dark);
      --color: var(--black);
    }

    @include theme("dark") {
      --background: var(--black-light);
      --border-color: var(--grey-light);
      --color: var(--white);
    }
  }

  .label {
    cursor: pointer;
    margin-bottom: 1rem;
    text-transform: capitalize;
  }

  .textArea {
    background-color: var(--background);
    border: 1px solid;
    border-color: var(--border-color);
    border-radius: 4px;
    caret-color: var(--secondary);
    color: var(--color);
    font-size: 1.6rem;
    line-height: 24px;
    outline: none;
    overflow: hidden;
    padding: 5px 10px;
    resize: none;
    width: 100%;

    &[aria-invalid="true"] {
      --border-color: var(--error);

      &:hover {
        border-color: var(--error);
      }
    }

    &::placeholder {
      color: var(--grey);
    }

    &:-webkit-autofill,
    &:-webkit-autofill:active,
    &:-webkit-autofill:hover,
    &:-webkit-autofill:focus {
      background-color: var(--background-color);
      border: none;
      box-shadow: 0 0 0 1000px var(--background-color) inset;
      caret-color: var(--secondary);
      font-size: 100%;
      -webkit-text-fill-color: var(--white);

      // it's not possible to use transparent background color
      // to override chrome autofill styles, so background needs
      // to be set to a certain color, to keep the initial background
      // transparent the transition delay can be used
      transition: background-color 7200s ease-in-out 0s; // 2 hr delay
    }

    &::selection {
      background-color: var(--cyan);
      color: var(--white);
    }

    &:focus-visible {
      outline: none;
    }
  }

  .error {
    color: var(--error);
  }
}
