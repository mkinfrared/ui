@import "../../styles/common.scss";

.Toggle {
  --color: var(--toggle-text-color, var(--white));
  --padding: 0.2rem;
  --size: var(--text-height);
  --switch-background: var(--secondary-gradient);
  --text-color: inherit;

  align-items: center;
  display: flex;
  width: fit-content;

  &:has(input:checked) {
    --switch-background: var(--primary-gradient);

    .ball {
      transform: translateX(100%);
    }
  }

  &:has(input[aria-invalid="true"]) {
    --switch-background: var(--error-gradient);
    --text-color: var(--error);
  }

  &:has(input:focus) {
    .container {
      border-radius: 0.4rem;
    }
  }

  &:has(input:focus-visible) {
    .container {
      @include focus-visible;
    }
  }

  .container {
    align-items: center;
    border-radius: 0.4rem;
    display: flex;
  }

  .switch {
    align-items: center;
    background: var(--switch-background);
    border-radius: 5rem;
    display: flex;
    height: var(--size);
    padding: var(--padding);
    transition: all 0.25s ease-in-out;
    width: calc(var(--size) * 2 - var(--padding) * 2);

    .ball {
      aspect-ratio: 1/1;
      background-color: var(--white);
      border-radius: 50%;
      box-shadow: 0 0 0.5rem rgb(0 0 0 / 30%);
      display: block;
      height: 100%;
      transition: all 0.25s;
    }
  }

  .text {
    color: var(--text-color);
    margin-left: 1rem;
  }

  .input {
    height: 0;
    margin: 0;
    opacity: 0;
    position: absolute;
    width: 0;
    z-index: -1;
  }

  &.readOnly {
    pointer-events: none;
  }

  &.readOnly,
  &:has(input:disabled) {
    --text-color: var(--grey);

    .container {
      @include disabled;
    }
  }
}
